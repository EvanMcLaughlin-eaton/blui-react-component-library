import { ComponentType } from '../../../__types__';
import * as Colors from '@brightlayer-ui/colors';

export const infoListItemConfig: ComponentType = {
    componentName: 'Info List Item',
    props: [
        {
            propName: 'avatar',
            inputType: 'boolean',
            inputValue: false,
            propType: 'boolean',
            helperText: 'Show colored background for icon',
            required: false,
            defaultValue: false,
        },
        {
            propName: 'backgroundColor',
            inputType: 'colorPicker',
            inputValue: Colors.white[50],
            propType: 'string',
            helperText: 'The color used for the background	',
            required: false,
        },
        {
            propName: 'chevron',
            inputType: 'boolean',
            inputValue: false,
            propType: 'boolean',
            helperText: 'Add a chevron icon on the right',
            required: false,
            defaultValue: false,
        },
        {
            propName: 'chevronColor',
            inputType: 'colorPicker',
            inputValue: Colors.gray[500],
            propType: 'string',
            helperText: 'Color override for the chevron icon',
            required: false,
        },
        {
            propName: 'dense',
            inputType: 'boolean',
            inputValue: false,
            propType: 'boolean',
            helperText: 'Smaller height row with less padding',
            required: false,
            defaultValue: false,
        },
        {
            propName: 'divider',
            inputType: 'select',
            inputValue: 'none',
            options: ['none', 'full', 'partial'],
            propType: 'string',
            helperText: 'Show a row separator below the row',
            required: false,
            defaultValue: 'none',
        },
        {
            propName: 'fontColor',
            inputType: 'colorPicker',
            inputValue: Colors.black[500],
            propType: 'string',
            helperText: 'Main text color',
            required: false,
        },
        {
            propName: 'hidePadding',
            inputType: 'boolean',
            inputValue: false,
            propType: 'boolean',
            helperText: 'Remove left padding if no icon is used',
            required: false,
            defaultValue: false,
        },
        {
            propName: 'icon',
            inputType: 'select',
            inputValue: '<Devices />',
            options: ['undefined', '<Devices />'],
            propType: 'JSX.Element',
            helperText: 'A component to render for the icon',
            required: false,
            defaultValue: 'undefined',
        },
        {
            propName: 'iconAlign',
            inputType: 'select',
            inputValue: 'left',
            options: ['left', 'center', 'right'],
            propType: 'string',
            helperText: 'Icon alignment when avatar is set to false',
            required: false,
            defaultValue: 'left',
        },
        {
            propName: 'iconColor',
            inputType: 'colorPicker',
            inputValue: Colors.black[500],
            propType: 'string',
            helperText: 'The color used for the icon',
            required: false,
        },
        {
            propName: 'info',
            inputType: 'string',
            inputValue: 'more info...',
            propType: 'string | Array<React.ReactNode>',
            helperText: 'The text to show on the third line',
            required: false,
        },
        {
            propName: 'ripple',
            inputType: 'boolean',
            inputValue: false,
            propType: 'boolean',
            helperText: 'Whether to apply material ripple effect on click',
            required: false,
            defaultValue: false,
        },
        {
            propName: 'statusColor',
            inputType: 'colorPicker',
            inputValue: Colors.blue[500],
            propType: 'string',
            helperText: 'Status stripe and icon color',
            required: false,
        },
        {
            propName: 'subtitle',
            inputType: 'string',
            inputValue: 'with all customizable properties',
            propType: 'string | Array<React.ReactNode>',
            helperText: 'The text to show on the second line',
            required: false,
        },
        {
            propName: 'title',
            inputType: 'string',
            inputValue: 'Info List Item',
            propType: 'ReactNode',
            helperText: 'The text to show on the first line',
            required: true,
        },
        {
            propName: 'wrapInfo',
            inputType: 'boolean',
            inputValue: false,
            propType: 'boolean',
            helperText: 'Whether to wrap info on overflow',
            required: false,
            defaultValue: false,
        },
        {
            propName: 'wrapSubtitle',
            inputType: 'boolean',
            inputValue: false,
            propType: 'boolean',
            helperText: 'Whether to wrap subtitle on overflow',
            required: false,
            defaultValue: false,
        },
        {
            propName: 'wrapTitle',
            inputType: 'boolean',
            inputValue: false,
            propType: 'boolean',
            helperText: 'Whether to wrap title on overflow',
            required: false,
            defaultValue: false,
        },
        {
            propName: 'disabled',
            inputType: 'boolean',
            inputValue: false,
            propType: 'boolean',
            helperText: 'Whether to Disable Info List Item',
            required: false,
            defaultValue: false,
        },
    ],
};

export default infoListItemConfig;
